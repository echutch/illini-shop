

services:
  db:
    container_name: db
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}         
      POSTGRES_PASSWORD: ${DB_PASSWORD} 
      POSTGRES_DB: ${DB_NAME}    
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - backend

  backend:
    build: ./backend
    command: ["watchmedo", "auto-restart", "--patterns=*.py", "--recursive", "--", "python", "/app/manage.py", "runserver", "0.0.0.0:8000"]
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}  
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    depends_on:
      - db
    links:
      - db:db
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      # - /app/__pycache__
    networks:
      - backend

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    command: ["npm", "start"]
    environment:
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - frontend
      - backend

volumes:
  postgres_data:
  node_modules:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
